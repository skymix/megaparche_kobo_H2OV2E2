--
-- Autogenerated by Thrift
--
-- DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
-- @generated
--


require 'thrift.Thrift'
require 'evernote.userstore.constants'

PublicUserInfo = __TObject:new{
  userId,
  shardId,
  privilege,
  username,
  noteStoreUrl,
  webApiUrlPrefix
}

function PublicUserInfo:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.userId = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.shardId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.I32 then
        self.privilege = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 4 then
      if ftype == TType.STRING then
        self.username = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 5 then
      if ftype == TType.STRING then
        self.noteStoreUrl = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 6 then
      if ftype == TType.STRING then
        self.webApiUrlPrefix = iprot:readString()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function PublicUserInfo:write(oprot)
  oprot:writeStructBegin('PublicUserInfo')
  if self.userId then
    oprot:writeFieldBegin('userId', TType.I32, 1)
    oprot:writeI32(self.userId)
    oprot:writeFieldEnd()
  end
  if self.shardId then
    oprot:writeFieldBegin('shardId', TType.STRING, 2)
    oprot:writeString(self.shardId)
    oprot:writeFieldEnd()
  end
  if self.privilege then
    oprot:writeFieldBegin('privilege', TType.I32, 3)
    oprot:writeI32(self.privilege)
    oprot:writeFieldEnd()
  end
  if self.username then
    oprot:writeFieldBegin('username', TType.STRING, 4)
    oprot:writeString(self.username)
    oprot:writeFieldEnd()
  end
  if self.noteStoreUrl then
    oprot:writeFieldBegin('noteStoreUrl', TType.STRING, 5)
    oprot:writeString(self.noteStoreUrl)
    oprot:writeFieldEnd()
  end
  if self.webApiUrlPrefix then
    oprot:writeFieldBegin('webApiUrlPrefix', TType.STRING, 6)
    oprot:writeString(self.webApiUrlPrefix)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

AuthenticationResult = __TObject:new{
  currentTime,
  authenticationToken,
  expiration,
  user,
  publicUserInfo,
  noteStoreUrl,
  webApiUrlPrefix,
  secondFactorRequired,
  secondFactorDeliveryHint
}

function AuthenticationResult:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I64 then
        self.currentTime = iprot:readI64()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.authenticationToken = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.I64 then
        self.expiration = iprot:readI64()
      else
        iprot:skip(ftype)
      end
    elseif fid == 4 then
      if ftype == TType.STRUCT then
        self.user = User:new{}
        self.user:read(iprot)
      else
        iprot:skip(ftype)
      end
    elseif fid == 5 then
      if ftype == TType.STRUCT then
        self.publicUserInfo = PublicUserInfo:new{}
        self.publicUserInfo:read(iprot)
      else
        iprot:skip(ftype)
      end
    elseif fid == 6 then
      if ftype == TType.STRING then
        self.noteStoreUrl = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 7 then
      if ftype == TType.STRING then
        self.webApiUrlPrefix = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 8 then
      if ftype == TType.BOOL then
        self.secondFactorRequired = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    elseif fid == 9 then
      if ftype == TType.STRING then
        self.secondFactorDeliveryHint = iprot:readString()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function AuthenticationResult:write(oprot)
  oprot:writeStructBegin('AuthenticationResult')
  if self.currentTime then
    oprot:writeFieldBegin('currentTime', TType.I64, 1)
    oprot:writeI64(self.currentTime)
    oprot:writeFieldEnd()
  end
  if self.authenticationToken then
    oprot:writeFieldBegin('authenticationToken', TType.STRING, 2)
    oprot:writeString(self.authenticationToken)
    oprot:writeFieldEnd()
  end
  if self.expiration then
    oprot:writeFieldBegin('expiration', TType.I64, 3)
    oprot:writeI64(self.expiration)
    oprot:writeFieldEnd()
  end
  if self.user then
    oprot:writeFieldBegin('user', TType.STRUCT, 4)
    self.user:write(oprot)
    oprot:writeFieldEnd()
  end
  if self.publicUserInfo then
    oprot:writeFieldBegin('publicUserInfo', TType.STRUCT, 5)
    self.publicUserInfo:write(oprot)
    oprot:writeFieldEnd()
  end
  if self.noteStoreUrl then
    oprot:writeFieldBegin('noteStoreUrl', TType.STRING, 6)
    oprot:writeString(self.noteStoreUrl)
    oprot:writeFieldEnd()
  end
  if self.webApiUrlPrefix then
    oprot:writeFieldBegin('webApiUrlPrefix', TType.STRING, 7)
    oprot:writeString(self.webApiUrlPrefix)
    oprot:writeFieldEnd()
  end
  if self.secondFactorRequired then
    oprot:writeFieldBegin('secondFactorRequired', TType.BOOL, 8)
    oprot:writeBool(self.secondFactorRequired)
    oprot:writeFieldEnd()
  end
  if self.secondFactorDeliveryHint then
    oprot:writeFieldBegin('secondFactorDeliveryHint', TType.STRING, 9)
    oprot:writeString(self.secondFactorDeliveryHint)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

BootstrapSettings = __TObject:new{
  serviceHost,
  marketingUrl,
  supportUrl,
  accountEmailDomain,
  enableFacebookSharing,
  enableGiftSubscriptions,
  enableSupportTickets,
  enableSharedNotebooks,
  enableSingleNoteSharing,
  enableSponsoredAccounts,
  enableTwitterSharing,
  enableLinkedInSharing,
  enablePublicNotebooks
}

function BootstrapSettings:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.serviceHost = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.marketingUrl = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.STRING then
        self.supportUrl = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 4 then
      if ftype == TType.STRING then
        self.accountEmailDomain = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 5 then
      if ftype == TType.BOOL then
        self.enableFacebookSharing = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    elseif fid == 6 then
      if ftype == TType.BOOL then
        self.enableGiftSubscriptions = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    elseif fid == 7 then
      if ftype == TType.BOOL then
        self.enableSupportTickets = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    elseif fid == 8 then
      if ftype == TType.BOOL then
        self.enableSharedNotebooks = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    elseif fid == 9 then
      if ftype == TType.BOOL then
        self.enableSingleNoteSharing = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    elseif fid == 10 then
      if ftype == TType.BOOL then
        self.enableSponsoredAccounts = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    elseif fid == 11 then
      if ftype == TType.BOOL then
        self.enableTwitterSharing = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    elseif fid == 12 then
      if ftype == TType.BOOL then
        self.enableLinkedInSharing = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    elseif fid == 13 then
      if ftype == TType.BOOL then
        self.enablePublicNotebooks = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function BootstrapSettings:write(oprot)
  oprot:writeStructBegin('BootstrapSettings')
  if self.serviceHost then
    oprot:writeFieldBegin('serviceHost', TType.STRING, 1)
    oprot:writeString(self.serviceHost)
    oprot:writeFieldEnd()
  end
  if self.marketingUrl then
    oprot:writeFieldBegin('marketingUrl', TType.STRING, 2)
    oprot:writeString(self.marketingUrl)
    oprot:writeFieldEnd()
  end
  if self.supportUrl then
    oprot:writeFieldBegin('supportUrl', TType.STRING, 3)
    oprot:writeString(self.supportUrl)
    oprot:writeFieldEnd()
  end
  if self.accountEmailDomain then
    oprot:writeFieldBegin('accountEmailDomain', TType.STRING, 4)
    oprot:writeString(self.accountEmailDomain)
    oprot:writeFieldEnd()
  end
  if self.enableFacebookSharing then
    oprot:writeFieldBegin('enableFacebookSharing', TType.BOOL, 5)
    oprot:writeBool(self.enableFacebookSharing)
    oprot:writeFieldEnd()
  end
  if self.enableGiftSubscriptions then
    oprot:writeFieldBegin('enableGiftSubscriptions', TType.BOOL, 6)
    oprot:writeBool(self.enableGiftSubscriptions)
    oprot:writeFieldEnd()
  end
  if self.enableSupportTickets then
    oprot:writeFieldBegin('enableSupportTickets', TType.BOOL, 7)
    oprot:writeBool(self.enableSupportTickets)
    oprot:writeFieldEnd()
  end
  if self.enableSharedNotebooks then
    oprot:writeFieldBegin('enableSharedNotebooks', TType.BOOL, 8)
    oprot:writeBool(self.enableSharedNotebooks)
    oprot:writeFieldEnd()
  end
  if self.enableSingleNoteSharing then
    oprot:writeFieldBegin('enableSingleNoteSharing', TType.BOOL, 9)
    oprot:writeBool(self.enableSingleNoteSharing)
    oprot:writeFieldEnd()
  end
  if self.enableSponsoredAccounts then
    oprot:writeFieldBegin('enableSponsoredAccounts', TType.BOOL, 10)
    oprot:writeBool(self.enableSponsoredAccounts)
    oprot:writeFieldEnd()
  end
  if self.enableTwitterSharing then
    oprot:writeFieldBegin('enableTwitterSharing', TType.BOOL, 11)
    oprot:writeBool(self.enableTwitterSharing)
    oprot:writeFieldEnd()
  end
  if self.enableLinkedInSharing then
    oprot:writeFieldBegin('enableLinkedInSharing', TType.BOOL, 12)
    oprot:writeBool(self.enableLinkedInSharing)
    oprot:writeFieldEnd()
  end
  if self.enablePublicNotebooks then
    oprot:writeFieldBegin('enablePublicNotebooks', TType.BOOL, 13)
    oprot:writeBool(self.enablePublicNotebooks)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

BootstrapProfile = __TObject:new{
  name,
  settings
}

function BootstrapProfile:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.name = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRUCT then
        self.settings = BootstrapSettings:new{}
        self.settings:read(iprot)
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function BootstrapProfile:write(oprot)
  oprot:writeStructBegin('BootstrapProfile')
  if self.name then
    oprot:writeFieldBegin('name', TType.STRING, 1)
    oprot:writeString(self.name)
    oprot:writeFieldEnd()
  end
  if self.settings then
    oprot:writeFieldBegin('settings', TType.STRUCT, 2)
    self.settings:write(oprot)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

BootstrapInfo = __TObject:new{
  profiles
}

function BootstrapInfo:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.LIST then
        self.profiles = {}
        local _etype3, _size0 = iprot:readListBegin()
        for _i=1,_size0 do
          _elem4 = BootstrapProfile:new{}
          _elem4:read(iprot)
          table.insert(self.profiles, _elem4)
        end
        iprot:readListEnd()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function BootstrapInfo:write(oprot)
  oprot:writeStructBegin('BootstrapInfo')
  if self.profiles then
    oprot:writeFieldBegin('profiles', TType.LIST, 1)
    oprot:writeListBegin(TType.STRUCT, #self.profiles)
    for _,iter5 in ipairs(self.profiles) do
      iter5:write(oprot)
    end
    oprot:writeListEnd()
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end
